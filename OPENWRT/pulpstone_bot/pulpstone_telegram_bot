#!/bin/sh
pulpstone_telegram_bot=12-03-2018

PATH='/usr/bin:/usr/sbin:/bin:/sbin'

source /root/pulpstone_bot/variables

curl -k -s -X POST $api/sendMessage -d chat_id=$my_chat_id -d parse_mode=Markdown --data-urlencode text="AntiMaling Bot Started, ketik /list untuk memulai" &> $telegram_log_file

polling_timeout=30
offset=0
if [ -f "$offset_file" ] ; then
	offset=$( cat $offset_file )
else
	echo $offset > $offset_file
fi

reply_to_msg () {
	msg_id=$1
	origin=$2
	eval toReturn="$3"
        curl -k -s -X POST $api/sendMessage -d reply_to_message_id=$msg_id -d chat_id=$origin -d parse_mode=HTML --data-urlencode text="$toReturn" &> $telegram_log_file
}

while [ true ]
do
	updates=$(curl -s -k -X GET ${api}/getUpdates?offset=${offset}&timeout=${polling_timeout})
	status=$(jsonfilter -s "$updates" -e $.ok)
	if [ $status = 'true' ]; then
		update_ids=$(jsonfilter -s "$updates" -e $.result[*].update_id)
		for update_id in $update_ids
		do
			offset=$((update_id+1))
			echo $offset > $offset_file
			origin=$(jsonfilter -s "$updates"  -e "$.result[@.update_id=$update_id].message.chat.id")
			msg_id=$(jsonfilter -s "$updates"  -e "$.result[@.update_id=$update_id].message.message_id")
			command=$(jsonfilter -s "$updates" -e "$.result[@.update_id=$update_id].message.text")
			is_a_cmd=$(jsonfilter -s "$updates" -e "$.result[@.update_id=$update_id].message.entities[*].type")
			query_ans=$(jsonfilter -s "$updates" -e "$.result[@.update_id=$update_id].callback_query.id")
			origin_ans=$(jsonfilter -s "$updates"  -e "$.result[@.update_id=$update_id].callback_query.message.chat.id")
			if [[ "$origin" != "$my_chat_id" && "$origin_ans" != "$my_chat_id" ]];then
				curl -k -s -X POST $api/sendMessage -d reply_to_message_id=$msg_id -d chat_id=$origin -d parse_mode=Markdown --data-urlencode text="This is a Private bot." &> $telegram_log_file
				curl -k -s -X POST $api/leaveChat -d chat_id=$origin  &> $telegram_log_file
			else
				if [ "$is_a_cmd" ==  "bot_command" ]; then
					
					cmd=$(echo $command |  awk '{print $1}')
					DATE=`date +%Y-%m-%d_%H:%M:%S`
					RETURN_TEXT=""
					case "$cmd" in
						("/reboot") 
                            echo "[ $DATE ] reboot!" >> $cmd_log_file
	                        RETURN_TEXT="Reboot router!"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}" && sleep 5 && reboot
							;;
						("/shutdown") 
                            echo "[ $DATE ] shutdown!" >> $cmd_log_file
	                        RETURN_TEXT="Shutdown router!"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}" && sleep 5 && halt
							;;
						("/restart_bot")
							echo "[ $DATE ] restart bot!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh restart_bot)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;	
						("/connected_clients")
							echo "[ $DATE ] connected clients!" >> $cmd_log_file
							clients=$("./functions/get_connected_clients.sh")
							RETURN_TEXT="$(printf "Connected Clients: \n$clients")"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
                            ;;
						("/memory")
							echo "[ $DATE ] memory!" >> $cmd_log_file
							clients=$("./functions/memory_info.sh")
							RETURN_TEXT="$(printf "Memory informations: \n$clients")"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
                            ;;
						("/temperature")
							echo "[ $DATE ] temperature!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh temp)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/network_traffic")
							echo "[ $DATE ] network_traffic!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh network_traffic)
							RETURN_TEXT="$(printf "Network Traffic Informations: \n$clients")"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/my_ip")
							echo "[ $DATE ] my ip address!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh myip)
                            RETURN_TEXT="$(printf "My IP Address: $clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/3g_info")
							echo "[ $DATE ] 3g info!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh 3g_info)
                            RETURN_TEXT="$(printf "3G/4G Informations: \n$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/bot_go_public")
							echo "[ $DATE ] bot go public!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh bot_go_public)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/bot_go_private")
							echo "[ $DATE ] bot go private!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh bot_go_private)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/bot_status")
							echo "[ $DATE ] bot status!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh bot_status)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/bot")
							echo "[ $DATE ] bot list!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh bot)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/about")
							echo "[ $DATE ] router control!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh about)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/router")
							echo "[ $DATE ] router control!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh router)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;		
						("/kontak_on")
							echo "[ $DATE ] kontak on!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh kontak_on)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/kontak_off")
							echo "[ $DATE ] kontak off!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh kontak_off)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/mesin_on")
							echo "[ $DATE ] mesin on!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh mesin_on)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/mesin_off")
							echo "[ $DATE ] mesin off!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh mesin_off)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/answer_back")
							echo "[ $DATE ] answer back!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh answer_back)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/getlokasi")
							echo "[ $DATE ] get lokasi!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh getlokasi)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						("/kalibrasi")
							echo "[ $DATE ] kalibrasi!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh kalibrasi)
                            RETURN_TEXT="$(printf "$clients")"
                            reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;				
						("/list")
							echo "[ $DATE ] list all!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh list)
							RETURN_TEXT="$(printf "$clients")"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
						(*)
							echo "[ $DATE ] wrong command!" >> $cmd_log_file
							clients=$(/root/pulpstone_bot/functions/pulpstone_general.sh)
							RETURN_TEXT="$(printf "$clients")"
							reply_to_msg $msg_id $origin "\${RETURN_TEXT}"
							;;
                    esac

				else
 					curl -k -s -X POST $api/sendMessage -d reply_to_message_id=$msg_id -d chat_id=$origin -d parse_mode=Markdown --data-urlencode text="List of Commands : /list" &> $telegram_log_file
				fi

			fi
		done
	fi
	sleep 1
done&
